cmake_minimum_required(VERSION 2.6)
project(argos2_user_vtrianni)

include(CPack)
set(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake)

add_definitions(-DTIXML_USE_TICPP)

include_directories(${CMAKE_SOURCE_DIR}/../.. ${CMAKE_SOURCE_DIR}/../../epfl ${CMAKE_SOURCE_DIR}/../../epfl/dashel /usr/share/pvm3/include)
set(CMAKE_CXX_FLAGS_RELEASE "-O2 -Wall -DNDEBUG -ffast-math  -lprofiler" CACHE STRING "Flags used by the compiler during release builds" FORCE)
set(CMAKE_C_FLAGS_RELEASE "-O2 -Wall -DNDEBUG -ffast-math -std=gnu99 -lprofiler" CACHE STRING "Flags used by the compiler during release builds" FORCE)
set(CMAKE_CXX_FLAGS_DEBUG "-ggdb3 -Wall -lprofiler" CACHE STRING "Flags used by the compiler during debug builds" FORCE)
set(CMAKE_C_FLAGS_DEBUG "-ggdb3 -Wall -std=gnu99 -lprofiler" CACHE STRING "Flags used by the compiler during debug builds" FORCE)
set(CMAKE_CXX_FLAGS "-ggdb3 -Wall -lprofiler" CACHE STRING "Flags used by the compiler during all builds" FORCE)
set(CMAKE_C_FLAGS "-ggdb3 -Wall -std=gnu99 -lprofiler" CACHE STRING "Flags used by the compiler during all builds" FORCE)

include(${CMAKE_SOURCE_DIR}/cmake/user_config.cmake)

if( ARGOS_COMPILE_REAL_SWARMANOID )

  include(${CMAKE_SOURCE_DIR}/../../real_robot/swarmanoid/cmake/moboard.cmake)
  add_definitions(-DCROSSCOMPILING)

  set(ARGOSINSTALLDIR $ENV{ARGOSINSTALLDIR})

  add_subdirectory(experiments)
  add_subdirectory(controllers)

else( ARGOS_COMPILE_REAL_SWARMANOID )
  add_subdirectory(experiments)
  add_subdirectory(controllers)
  add_subdirectory(loop_functions)
  add_subdirectory(revolver)

  link_directories(
    ${CMAKE_BINARY_DIR}/../../../common/simulator
    ${CMAKE_BINARY_DIR}/../../../common/simulator/utility
    ${CMAKE_BINARY_DIR}/../../../simulator/configuration
    ${CMAKE_BINARY_DIR}/../../../simulator
    /usr/share/pvm3/lib/LINUX
    )
  add_executable(argos main_functions/simulation_main.cpp)
  target_link_libraries(argos
    revolver
    argos2_common_utility
    argos2_simulator_configuration
    argos2_simulator)

  add_executable(revolve main_functions/revolver_main.cpp)
  target_link_libraries(revolve
    revolver
    argos2_common_utility
    argos2_simulator_configuration
    argos2_simulator
    )

  add_executable(invalid main_functions/invalid_main.cpp)
  target_link_libraries(invalid
    revolver
    argos2_common_utility
    argos2_simulator_configuration
    argos2_simulator
    )



endif( ARGOS_COMPILE_REAL_SWARMANOID )

